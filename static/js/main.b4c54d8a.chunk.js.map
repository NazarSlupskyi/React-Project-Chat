{"version":3,"sources":["components/chatsComponent.js","components/HeaderHistory.js","components/HistoryComponent.js","components/SendMassageComonent.js","constans/constans.js","App.js","index.js"],"names":["ChatsComponent","contacts","hendlerSerch","hendlerChooseContact","searchStr","filteredContacts","sort","a","b","history","length","filter","contact","name","toLowerCase","includes","className","src","alt","type","placeholder","onChange","value","map","lastMassage","onClick","icon","date","massage","id","HeaderHistory","choosedContact","startValue","HistoryComponent","massageElement","massageFromMe","time","SendMassageComponent","sendMassage","getDateAndTime","getMassage","hendlerSendMassage","useEffect","document","addEventListener","target","code","sendMassageInput","querySelector","prevChoosedContact","find","active","setTimeout","DEFAULT_CONTACTS","CONTACTS","App","useState","setContacts","setSearchStr","getLocalStorage","setLocalStorage","contactList","localStorage","setItem","JSON","stringify","parse","getItem","Date","min","getMinutes","minForSroting","getSeconds","monthInShortStr","toLocaleDateString","month","getMonth","dateOfMassage","getDate","getFullYear","getHours","activUser","push","getMassageFromUser","fetch","promise","json","massageFromServer","massageFromUser","event","targetContactName","currentTarget","childNodes","innerHTML","activeUser","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b4c54d8a.chunk.js","sourcesContent":["import React from 'react';\n\nconst ChatsComponent = ({contacts, hendlerSerch, hendlerChooseContact, searchStr}) => {\n    const filteredContacts = searchStr === '' \n            ? contacts.sort((a, b) => b.history[b.history.length - 1].sort - a.history[a.history.length - 1].sort)\n            : contacts.filter((contact) => contact.name.toLowerCase().includes(searchStr.toLowerCase()))    \n    return (\n        <>\n            <div className=\"leftSidebar\">\n                <img className=\"userImg\" src=\"images/profileIcon/myIcon.png\"  alt=\"user\"/>\n                <input className=\"searchInput\" type=\"text\" placeholder=\"Search or start new chat\" onChange={hendlerSerch} value={searchStr}/>\n                <img className=\"searchIcon\" src=\"images/search.png\" alt=\"Search Icon\"/>\n                <div className=\"chats\">\n                    <div className=\"row\">Chats</div>\n                    <ul>\n                        {filteredContacts.map((contact) => {\n                        const {history} = contact\n                        const lastMassage = history[history.length - 1] \n                        return (\n                            <li key = {contact.id} className = \"contact\" onClick = {hendlerChooseContact}>\n                                <img className=\"contactPic\" src={contact.icon} alt=\"Contact Pic\"/>\n                                <div className=\"date\">{lastMassage.date}</div>\n                                <p className=\"contactName\">{contact.name}</p>\n                                <div className=\"contactMassage\">{lastMassage.massage}</div>\n                            </li> )}\n                        )} \n                    </ul>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ChatsComponent;","import React from 'react';\n\nconst HeaderHistory = ({choosedContact = {}}) => {\n    const startValue = {name: 'Select contact to start chating !', icon:'/images/counting.png'}\n    \n    return (\n        <div className=\"headerConteiner\">\n            <img className=\"historyIcon\" src={choosedContact.icon || startValue.icon} alt=\"icon\"/>\n            <div className=\"historyContactName\">{choosedContact.name || startValue.name}</div>\n        </div>\n    )\n}\n\nexport default HeaderHistory;","import React from 'react';\n\nconst HistoryComponent = ({choosedContact = {}}) => (\n    <div className=\"sectionHistory\"> \n            {(choosedContact.history || []).map((massageElement) => (\n                massageElement.massageFromMe === false \n                    ? (\n                        <div className=\"massageConteiner\">\n                            <div className=\"userMassage\">\n                                <img className=\"userMassagePic\" src ={choosedContact.icon} alt=\"profile\"/>\n                                <div className=\"textOfMassage\">{massageElement.massage}</div>\n                            </div>\n                            <div className=\"massageDate\">{massageElement.time}</div>\n                        </div>\n                    ) : (\n                        <div className=\"myMassageConteiner\">\n                            <div className=\"myMassageBlock\">  \n                                <div className=\"myTextMassage\">{massageElement.massage}</div>\n                                <div className=\"myMassageDate\">{massageElement.time}</div>\n                            </div>  \n                        </div>\n                    )\n            ))}\n        </div>\n    )\n\n\nexport default HistoryComponent;","import React, {useEffect} from 'react';\n\nconst SendMassageComponent = ({sendMassage, getDateAndTime, getMassage, contacts, hendlerSendMassage}) => {\n\n    \n    useEffect(() => {\n        document.addEventListener(\"keydown\", ({target, code}) =>{\n            const sendMassageInput = document.querySelector(\".inputSendMassage\")\n    \n            if (sendMassageInput.value === '') return;\n            \n            if (code === 'Enter') {\n                const prevChoosedContact = contacts.find((contact) => contact.active === true)\n                \n                sendMassage({\n                    massage: sendMassageInput.value, \n                    time: getDateAndTime()[0],\n                    date: getDateAndTime()[1],\n                    sort: getDateAndTime()[2],\n                    massageFromMe: true\n                })\n                sendMassageInput.value = ''\n                setTimeout(() => getMassage(prevChoosedContact), 10000)\n            }\n        }) \n    }, []) \n\n    return (\n        <div className=\"sectionInput\">\n            <input className=\"inputSendMassage\" type=\"text\" placeholder=\"Type your massage\"></input>\n            <button onClick={hendlerSendMassage} className=\"sendButton\"><img className=\"sendIcon\" src=\"/images/send.png\" alt=\"Send Icon\"/></button>\n        </div>\n    )\n}\n\nexport default SendMassageComponent;","\n\nexport const DEFAULT_CONTACTS = [\n  {name: 'Alic Freeman', id: 1, active: false, icon:'/images/profileIcon/girl.png' , history: [{massage:'Hi!', date:'Oct 29', time: '10/29/2020 23:50', sort: '1', massageFromMe: false},{massage:'Hi!', date:'Oct 29', time: '10/29/2020 23:50',sort: '2', massageFromMe: true}]}, \n  {name:'John', id: 0, active: false, icon:'/images/profileIcon/boy.png', history: [{massage:'Where are you ?', date:'Oct 29', time: '10/29/2020 23:50', sort: '3', massageFromMe: false}]}, \n  {name:'Barrera', id: 2, active: false, icon:'/images/profileIcon/boy 1.png', history: [{massage: 'We lost money!!', date:'Oct 29', time: '10/29/2020 23:50', sort: '4', massageFromMe: false}]}, \n  {name:'Chuck', id: 3, active: false, icon:'/images/profileIcon/rocker.png', history: [{massage: 'we lost money!!', date:'Oct 29', time: '10/29/2020 23:50', sort: '5', massageFromMe: false}]}\n];\n\nexport const CONTACTS = 'CONTACTS';\n\nexport const URL = 'https://api.chucknorris.io/jokes/random'","import React, {useState, useEffect} from 'react';\nimport ChatsComponent from './components/chatsComponent';\nimport HeaderHistory from './components/HeaderHistory';\nimport HistoryComponent from './components/HistoryComponent';\nimport SendMassageComponent from './components/SendMassageComonent';\nimport {DEFAULT_CONTACTS, URL, CONTACTS} from './constans/constans'\n\nconst App = () => {\n  \n  const [contacts, setContacts] = useState(DEFAULT_CONTACTS)\n  const [searchStr, setSearchStr] = useState('')\n  \n  useEffect(() => {\n    getLocalStorage()\n  }, [])\n\n  const setLocalStorage = (contactList) => {\n    localStorage.setItem(CONTACTS, JSON.stringify(contactList));\n  }\n\n  const getLocalStorage = () => {\n    const contactsFromLockalStorage = JSON.parse(localStorage.getItem(CONTACTS));\n    \n    setContacts(null || DEFAULT_CONTACTS) // Коли в SetContacts замість null пердаю contactsFromLockalStorage\n    // то useState починає себе дуже дивно вести - він постійно заново створюється так як він спрацьовує перед першим рендером, \n    //я гуглив про це і намагався зрозуміти чому він так дивно себе веде але так і не знайшов ніякої інформації з цього приводу.\n    \n  }\n\n  const hendlerSerch = (event) => {\n    setSearchStr(event.target.value)\n    \n    if (event.target.value === '') {\n      setContacts(DEFAULT_CONTACTS)\n    }\n  }\n\n  const hendlerSendMassage = (event) =>{\n    const sendMassageInput = document.querySelector(\".inputSendMassage\")\n    \n    if (sendMassageInput.value === '') return;\n    const prevChoosedContact = contacts.find((contact) => contact.active === true)\n    \n    sendMassage({\n      massage: sendMassageInput.value, \n      time: getDateAndTime()[0],\n      date: getDateAndTime()[1],\n      sort: getDateAndTime()[2],\n      massageFromMe: true\n    })\n      sendMassageInput.value = ''\n      setTimeout(() => getMassage(prevChoosedContact), 10000)\n            \n  }\n\n  const getDateAndTime = () => {\n    const date = new Date ()\n    const min = date.getMinutes()\n    const minForSroting = date.getMinutes() * 60 + date.getSeconds()\n    const monthInShortStr = date.toLocaleDateString(\"en-US\", { month: 'short' })\n    const month = date.getMonth() + 1\n    const dateOfMassage = `${monthInShortStr} ${date.getDate()}`\n    const timeAndDateOfMassage = `${month < 10 ? '0' + month : month}/${date.getDate()}/${date.getFullYear()} \n    ${date.getHours()}:${min < 10 ? '0' + min : min}`\n\n    return [timeAndDateOfMassage, dateOfMassage, minForSroting]\n  }\n\n  const hendlerChooseContact = (event) => {\n    let targetContactName = event.currentTarget.childNodes[2].innerHTML\n    let contact = contacts.find((contact) => contact.name === targetContactName)\n    const activeUser = contacts.find((contact) => contact.active === true)\n    \n    if (activeUser) {\n      activeUser.active = false\n    }\n\n    setSearchStr('')\n    contact.active = true\n    setContacts([...contacts])\n  }\n\n  const sendMassage = (massage) => {\n    const activUser = contacts.find((contact) => contact.active === true)\n    \n    activUser && activUser.history.push(massage)\n\n    setLocalStorage(contacts)\n    setContacts([...contacts])\n  }\n\n  const getMassageFromUser = (massage, prevChoosedContact) => {\n    prevChoosedContact && prevChoosedContact.history.push(massage)\n\n    setLocalStorage(contacts)\n    setContacts([...contacts])\n  }\n\n  const getMassage = async (prevChoosedContact) => {\n    const promise = await fetch(URL)\n    const massageFromServer = await promise.json()\n    const massageFromUser = {massage: massageFromServer.value, date: getDateAndTime()[1], time: getDateAndTime()[0], sort:getDateAndTime()[2], massageFromMe: false}\n    \n    \n    getMassageFromUser(massageFromUser, prevChoosedContact)\n  }\n\n  const activUser = contacts.find((contact) => contact.active === true)\n  \n  return (\n    <div className=\"mainConteiner\">\n      <ChatsComponent searchStr={searchStr} hendlerChooseContact={hendlerChooseContact} contacts={contacts} hendlerSerch={hendlerSerch} />\n      <div className=\"headerHistory\">\n        <HeaderHistory choosedContact={activUser} />\n        <HistoryComponent choosedContact={activUser} />\n        <SendMassageComponent sendMassage={sendMassage} hendlerSendMassage={hendlerSendMassage} getDateAndTime={getDateAndTime} getMassage={getMassage} contacts={contacts}/>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}